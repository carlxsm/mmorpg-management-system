-- MySQL Script generated by MySQL Workbench
-- Tue Jun  4 10:28:18 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema crud_mmorpg
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema crud_mmorpg
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `crud_mmorpg` DEFAULT CHARACTER SET utf8 ;
USE `crud_mmorpg` ;

-- -----------------------------------------------------
-- Table `crud_mmorpg`.`character`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`character` (
                                                         `id` INT NOT NULL AUTO_INCREMENT,
                                                         `name` VARCHAR(14) NOT NULL,
    `level` INT NOT NULL,
    `xp` INT NOT NULL,
    `hp` INT NOT NULL,
    `mp` INT NOT NULL,
    PRIMARY KEY (`id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`member_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`member_list` (
                                                           `id` INT NOT NULL AUTO_INCREMENT,
                                                           `id_member` INT NOT NULL,
                                                           PRIMARY KEY (`id`),
    INDEX `fk_member_list_1_idx` (`id_member` ASC) VISIBLE,
    CONSTRAINT `fk_member_list_1`
    FOREIGN KEY (`id_member`)
    REFERENCES `crud_mmorpg`.`character` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`guild`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`guild` (
                                                     `id` INT NOT NULL AUTO_INCREMENT,
                                                     `id_leader` INT NOT NULL,
                                                     `id_member_list` INT NOT NULL,
                                                     `name` VARCHAR(20) NOT NULL,
    `description` VARCHAR(144) NOT NULL,
    `date_creation` DATE NOT NULL,
    PRIMARY KEY (`id`),
    INDEX `fk_guild_1_idx` (`id_leader` ASC) VISIBLE,
    INDEX `fk_guild_2_idx` (`id_member_list` ASC) VISIBLE,
    CONSTRAINT `fk_guild_1`
    FOREIGN KEY (`id_leader`)
    REFERENCES `crud_mmorpg`.`character` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_guild_2`
    FOREIGN KEY (`id_member_list`)
    REFERENCES `crud_mmorpg`.`member_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`item` (
                                                    `id` INT NOT NULL AUTO_INCREMENT,
                                                    `name` VARCHAR(24) NOT NULL,
    `level` INT NOT NULL,
    `drop_chance` DECIMAL(3,1) NOT NULL,
    PRIMARY KEY (`id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`item_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`item_list` (
                                                         `id` INT NOT NULL AUTO_INCREMENT,
                                                         `id_item` INT NOT NULL,
                                                         PRIMARY KEY (`id`),
    INDEX `fk_item_list_1_idx` (`id_item` ASC) VISIBLE,
    CONSTRAINT `fk_item_list_1`
    FOREIGN KEY (`id_item`)
    REFERENCES `crud_mmorpg`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`bag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`bag` (
                                                   `id` INT NOT NULL AUTO_INCREMENT,
                                                   `id_character` INT NOT NULL,
                                                   `id_item_list` INT NOT NULL,
                                                   `size` INT NOT NULL,
                                                   PRIMARY KEY (`id`),
    INDEX `fk_bag_1_idx` (`id_character` ASC) VISIBLE,
    INDEX `fk_bag_2_idx` (`id_item_list` ASC) VISIBLE,
    CONSTRAINT `fk_bag_1`
    FOREIGN KEY (`id_character`)
    REFERENCES `crud_mmorpg`.`character` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_bag_2`
    FOREIGN KEY (`id_item_list`)
    REFERENCES `crud_mmorpg`.`item_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`race`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`race` (
                                                    `id` INT NOT NULL AUTO_INCREMENT,
                                                    `name` VARCHAR(14) NOT NULL,
    PRIMARY KEY (`id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`race_character`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`race_character` (
                                                              `id` INT NOT NULL AUTO_INCREMENT,
                                                              `id_character` INT NOT NULL,
                                                              `id_race` INT NOT NULL,
                                                              PRIMARY KEY (`id`),
    INDEX `fk_race_character_idx` (`id_character` ASC) VISIBLE,
    INDEX `fk_race_character_2_idx` (`id_race` ASC) VISIBLE,
    CONSTRAINT `fk_race_character_1`
    FOREIGN KEY (`id_character`)
    REFERENCES `crud_mmorpg`.`character` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_race_character_2`
    FOREIGN KEY (`id_race`)
    REFERENCES `crud_mmorpg`.`race` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`class` (
                                                     `id` INT NOT NULL AUTO_INCREMENT,
                                                     `name` VARCHAR(12) NOT NULL,
    PRIMARY KEY (`id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`class_character`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`class_character` (
                                                               `id` INT NOT NULL AUTO_INCREMENT,
                                                               `id_character` INT NOT NULL,
                                                               `id_class` INT NOT NULL,
                                                               PRIMARY KEY (`id`),
    INDEX `fk_class_character_1_idx` (`id_character` ASC) VISIBLE,
    INDEX `fk_class_character_2_idx` (`id_class` ASC) VISIBLE,
    CONSTRAINT `fk_class_character_1`
    FOREIGN KEY (`id_character`)
    REFERENCES `crud_mmorpg`.`character` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_class_character_2`
    FOREIGN KEY (`id_class`)
    REFERENCES `crud_mmorpg`.`class` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`item_weapon_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`item_weapon_status` (
                                                                  `id` INT NOT NULL AUTO_INCREMENT,
                                                                  `id_item` INT NOT NULL,
                                                                  `attack` INT NOT NULL,
                                                                  `precision` INT NOT NULL,
                                                                  PRIMARY KEY (`id`),
    INDEX `fk_item_weapon_status_1_idx` (`id_item` ASC) VISIBLE,
    CONSTRAINT `fk_item_weapon_status_1`
    FOREIGN KEY (`id_item`)
    REFERENCES `crud_mmorpg`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`item_consumable_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`item_consumable_status` (
                                                                      `id` INT NOT NULL AUTO_INCREMENT,
                                                                      `id_item` INT NOT NULL,
                                                                      `nome_efeito` VARCHAR(45) NOT NULL,
    `valor_efeito` INT NOT NULL,
    PRIMARY KEY (`id`),
    INDEX `fk_item_consumable_status_idx` (`id_item` ASC) VISIBLE,
    CONSTRAINT `fk_item_consumable_status`
    FOREIGN KEY (`id_item`)
    REFERENCES `crud_mmorpg`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`item_armor_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`item_armor_status` (
                                                                 `id` INT NOT NULL AUTO_INCREMENT,
                                                                 `id_item` INT NOT NULL,
                                                                 `defense` INT NOT NULL,
                                                                 PRIMARY KEY (`id`),
    INDEX `fk_item_armor_status_1_idx` (`id_item` ASC) VISIBLE,
    CONSTRAINT `fk_item_armor_status_1`
    FOREIGN KEY (`id_item`)
    REFERENCES `crud_mmorpg`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`role` (
                                                    `id` INT NOT NULL AUTO_INCREMENT,
                                                    `name` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `crud_mmorpg`.`role_character`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `crud_mmorpg`.`role_character` (
                                                              `id` INT NOT NULL AUTO_INCREMENT,
                                                              `id_character` INT NOT NULL,
                                                              `id_role` INT NOT NULL,
                                                              PRIMARY KEY (`id`),
    INDEX `fk_role_character_idx` (`id_character` ASC) VISIBLE,
    INDEX `f_role_character_2_idx` (`id_role` ASC) VISIBLE,
    CONSTRAINT `fk_role_character_1`
    FOREIGN KEY (`id_character`)
    REFERENCES `crud_mmorpg`.`character` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `f_role_character_2`
    FOREIGN KEY (`id_role`)
    REFERENCES `crud_mmorpg`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
